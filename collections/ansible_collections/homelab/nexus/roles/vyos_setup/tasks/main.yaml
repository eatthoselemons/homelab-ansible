---
- name: Load ports configuration
  ansible.builtin.include_vars:
    file: "{{ role_path }}/../../vars/ports.yaml"
    name: ports

- name: Install required packages
  apt:
    name:
      - qemu-kvm
      - libvirt-daemon-system
      - libvirt-clients
      - bridge-utils
      - python3-libvirt
    state: present
    update_cache: yes

- name: Start and enable libvirtd
  systemd:
    name: libvirtd
    state: started
    enabled: yes

- name: Ensure libvirt images directory exists
  file:
    path: /var/lib/libvirt/images
    state: directory
    owner: libvirt-qemu
    group: kvm
    mode: '0755'

- name: Create VyOS disk image (for non-delegated scenarios)
  include_role:
    name: stafwag.qemu_img
  vars:
    qemu_img:
      dest: "{{ vyos_vm.disk_path }}"
      size: "{{ vyos_vm.disk_size | default('20G') }}"
      format: qcow2
      overwrite: true
  when: vyos_network_mode == 'nat' and not (vyos_configure_router | default(true))

- name: Fix disk image ownership for libvirt (for non-delegated scenarios)
  file:
    path: "{{ vyos_vm.disk_path }}"
    owner: libvirt-qemu
    group: kvm
    mode: '0644'
  when: vyos_network_mode == 'nat' and not (vyos_configure_router | default(true))

- name: Create libvirt network configuration for WAN
  community.libvirt.virt_net:
    name: wan
    state: present
    command: define
    xml: "{{ lookup('template', 'wan_network.xml.j2') }}"

- name: Create libvirt network configuration for LAN
  community.libvirt.virt_net:
    name: lan
    state: present
    command: define
    xml: "{{ lookup('template', 'lan_network.xml.j2') }}"

- name: Start WAN network
  community.libvirt.virt_net:
    name: wan
    state: active

- name: Start LAN network
  community.libvirt.virt_net:
    name: lan
    state: active


- name: Create and start VyOS VM using delegated_vm_install
  include_role:
    name: stafwag.delegated_vm_install
  vars:
    vm_name: "{{ vyos_vm.name }}"
    vm_ip: "{{ vyos_vm_ip | default('192.168.122.50') }}"
    vm_gateway: "{{ vyos_vm_gateway | default('192.168.122.1') }}"
    vm_nameservers: "{{ vyos_vm_nameservers | default(['1.1.1.1', '1.0.0.1']) }}"
    vm_memory: "{{ vyos_vm.memory }}"
    vm_vcpus: "{{ vyos_vm.vcpus }}"
    vm_disk_path: "{{ vyos_vm.disk_path }}"
    vm_disk_size: "{{ vyos_vm.disk_size | default('20G') }}"
    vm_os_variant: "{{ vyos_vm_os_variant | default('generic') }}"
    vm_ssh_keys:
      - "{{ lookup('infisical.vault.read_secrets', universal_auth_client_id='72fdfa59-56b2-4d2e-9dde-cd5a4d5ef3ea', universal_auth_client_secret=lookup('env', 'INFISICAL_CLIENT_SECRET'), project_id='e0ff40f2-e63c-4ffc-9233-a66c46a47b2e', path='/', env_slug='prod', url='https://app.infisical.com', secret_name='lizWorkstationSshKey') }}"
  when: vyos_network_mode != 'nat' or vyos_configure_router | default(true)

- name: Include VLAN network setup
  ansible.builtin.include_tasks: vlan_setup.yaml
  when: vyos_enable_vlans | default(true)

- name: Include VyOS SSH setup
  ansible.builtin.include_tasks: vyos_ssh_setup.yaml
  when: vyos_configure_router | default(true)

- name: Include VyOS configuration
  ansible.builtin.include_tasks: vyos_config.yaml
  when: vyos_configure_router | default(true)

- name: Include VyOS firewall configuration
  ansible.builtin.include_tasks: vyos_firewall.yaml
  when: vyos_configure_router | default(true) 