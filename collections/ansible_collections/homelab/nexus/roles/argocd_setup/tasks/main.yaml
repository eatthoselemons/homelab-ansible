---
- name: Create ArgoCD directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "{{ argocd_config_dir }}"
    - "{{ argocd_config_dir }}/applications"
    - "{{ argocd_config_dir }}/projects"
    - "{{ argocd_config_dir }}/repositories"
    - "{{ argocd_data_dir }}"

- name: Install ArgoCD CLI
  ansible.builtin.get_url:
    url: "https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64"
    dest: /usr/local/bin/argocd
    mode: '0755'

- name: Create ArgoCD configuration file
  ansible.builtin.template:
    src: argocd-cm.yaml.j2
    dest: "{{ argocd_config_dir }}/argocd-cm.yaml"
    mode: '0644'
  notify: restart argocd

- name: Create ArgoCD secret configuration
  ansible.builtin.template:
    src: argocd-secret.yaml.j2
    dest: "{{ argocd_config_dir }}/argocd-secret.yaml"
    mode: '0600'
  notify: restart argocd

- name: Create initial ArgoCD projects
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ argocd_config_dir }}/projects/{{ item.dest }}"
    mode: '0644'
  loop:
    - src: projects/homelab-project.yaml.j2
      dest: homelab-project.yaml
    - src: projects/infrastructure-project.yaml.j2
      dest: infrastructure-project.yaml

- name: Create initial ArgoCD applications
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ argocd_config_dir }}/applications/{{ item.dest }}"
    mode: '0644'
  loop:
    - src: applications/homelab-infrastructure.yaml.j2
      dest: homelab-infrastructure.yaml
    - src: applications/network-services.yaml.j2
      dest: network-services.yaml
    - src: applications/monitoring-stack.yaml.j2
      dest: monitoring-stack.yaml

- name: Create repository configurations
  ansible.builtin.template:
    src: repositories/homelab-repo.yaml.j2
    dest: "{{ argocd_config_dir }}/repositories/homelab-repo.yaml"
    mode: '0644'
  notify: restart argocd

- name: Create ArgoCD initialization script
  ansible.builtin.template:
    src: init-argocd.sh.j2
    dest: "{{ argocd_config_dir }}/init-argocd.sh"
    mode: '0755'

- name: Set up ArgoCD admin password
  ansible.builtin.shell: |
    echo "{{ argocd_admin_password }}" | argocd account update-password --account admin --new-password /dev/stdin
  environment:
    ARGOCD_SERVER: "{{ argocd_server_url }}"
  when: argocd_admin_password is defined
  no_log: true 
