apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-cm
  namespace: argocd
data:
  # Server configuration
  url: "{{ argocd_server_url }}"
  insecure: "{{ argocd_server_config.insecure | default(true) | string }}"
  admin.enabled: "true"
  
  # Repository configuration
  repositories: |
{% for repo in argocd_repositories %}
    - url: {{ repo.url }}
      type: {{ repo.type }}
      name: {{ repo.name }}
{% if repo.insecure is defined %}
      insecure: {{ repo.insecure | string }}
{% endif %}
{% endfor %}

  # RBAC configuration
{% if argocd_rbac_enabled %}
  policy.default: "{{ argocd_rbac_default_policy }}"
  policy.csv: |
{{ argocd_rbac_policy | indent(4, true) }}
{% endif %}

  # Application configuration
  application.instanceLabelKey: argocd.argoproj.io/instance
  
  # Sync configuration
  sync.wave.delay: 10s
  
  # Health check configuration
  resource.customizations: |
    argoproj.io/Application:
      health.lua: |
        hs = {}
        hs.status = "Progressing"
        hs.message = ""
        if obj.status ~= nil then
          if obj.status.health ~= nil then
            hs.status = obj.status.health.status
            if obj.status.health.message ~= nil then
              hs.message = obj.status.health.message
            end
          end
        end
        return hs 