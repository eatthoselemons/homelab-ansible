---
- name: Check VyOS VLAN 65 connectivity
  wait_for:
    host: "10.60.65.1"
    port: 22
    timeout: 5
  delegate_to: localhost
  become: no
  ignore_errors: yes
  register: vlan_check
  when: not harvester_test_mode

- name: Verify VLAN 65 is configured
  assert:
    that:
      - harvester_test_mode or vlan_check is succeeded
    fail_msg: "VLAN 65 not accessible. Run harvester-infrastructure-prerequisites.md first."
    success_msg: "VLAN 65 connectivity verified"

- name: Check NTP server connectivity
  wait_for:
    host: "{{ harvester_ntp_servers[0] }}"
    port: 123
    state: started
    timeout: 5
  delegate_to: localhost
  become: no
  ignore_errors: yes
  register: ntp_check
  when: not harvester_test_mode

- name: Verify NTP server is available
  assert:
    that:
      - harvester_test_mode or ntp_check is succeeded
    fail_msg: "NTP server not accessible. Ensure NTP server is running on Nexus VM."
    success_msg: "NTP server connectivity verified"

- name: Verify node connectivity
  wait_for:
    host: "{{ item.ip }}"
    port: 22
    timeout: 10
  loop: "{{ harvester_nodes }}"
  delegate_to: localhost
  become: no
  when: not harvester_test_mode

- name: Gather hardware facts from nodes
  setup:
    gather_subset:
      - hardware
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes }}"
  register: node_facts
  when: not harvester_test_mode

- name: Verify hardware requirements
  assert:
    that:
      - harvester_test_mode or (item.ansible_facts.ansible_memtotal_mb >= 32768)  # 32GB minimum
    fail_msg: "Node {{ item.item.name }} has insufficient memory. Found: {{ item.ansible_facts.ansible_memtotal_mb | default('unknown') }}MB, Required: 32768MB minimum"
    success_msg: "Node {{ item.item.name }} meets memory requirements"
  loop: "{{ node_facts.results | default([]) }}"
  when: not harvester_test_mode

- name: Check IOMMU enabled on nodes with PCIe devices
  shell: |
    dmesg | grep -E "(DMAR|AMD-Vi|IOMMU)" | grep -i enabled || echo "IOMMU not found"
  register: iommu_check
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes | selectattr('pcie_devices', 'defined') | list }}"
  failed_when: false
  when: not harvester_test_mode

- name: Verify IOMMU is enabled for passthrough nodes
  assert:
    that:
      - harvester_test_mode or "enabled" in item.stdout
    fail_msg: "IOMMU not enabled on {{ item.item.name }}. Enable IOMMU in BIOS/UEFI settings."
    success_msg: "IOMMU enabled on {{ item.item.name }}"
  loop: "{{ iommu_check.results | default([]) }}"
  when: 
    - not harvester_test_mode
    - item.item.pcie_devices is defined

- name: Check disk availability
  shell: |
    lsblk -n -o NAME,SIZE,TYPE | grep disk | grep -E "(sd|nvme)" | head -1
  register: disk_check
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes }}"
  when: not harvester_test_mode

- name: Verify installation disk exists
  assert:
    that:
      - harvester_test_mode or disk_check.results | length > 0
    fail_msg: "No suitable installation disk found on nodes"
    success_msg: "Installation disks verified on all nodes"
  when: not harvester_test_mode

- name: Display prerequisite validation summary
  debug:
    msg: |
      Prerequisite Validation Summary:
      - VLAN 65 Connectivity: {{ 'PASSED' if (harvester_test_mode or vlan_check is succeeded) else 'FAILED' }}
      - NTP Server Connectivity: {{ 'PASSED' if (harvester_test_mode or ntp_check is succeeded) else 'FAILED' }}
      - Node Connectivity: PASSED
      - Hardware Requirements: PASSED
      - IOMMU Status: {{ 'PASSED' if harvester_test_mode else 'CHECK MANUALLY FOR PASSTHROUGH NODES' }}
      - Installation Disks: PASSED
