---
- name: Generate GRUB configuration files for nodes with PCIe devices
  template:
    src: grub_config.j2
    dest: "/tmp/grub-{{ item.name }}.cfg"
    mode: '0644'
  loop: "{{ harvester_nodes | selectattr('pcie_devices', 'defined') | list }}"
  delegate_to: localhost
  become: no
  when: item.pcie_devices is defined and item.pcie_devices | length > 0

- name: Check current GRUB configuration
  shell: |
    grep -E "^GRUB_CMDLINE_LINUX=" /etc/default/grub || echo "GRUB_CMDLINE_LINUX=\"\""
  register: current_grub
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes }}"
  become: yes
  when: not harvester_test_mode

- name: Backup current GRUB configuration
  copy:
    src: /etc/default/grub
    dest: /etc/default/grub.backup.{{ ansible_date_time.epoch }}
    remote_src: yes
    mode: '0644'
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes | selectattr('pcie_devices', 'defined') | list }}"
  become: yes
  when: 
    - not harvester_test_mode
    - item.pcie_devices is defined and item.pcie_devices | length > 0

- name: Update GRUB configuration for IOMMU and PCIe passthrough
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: 'GRUB_CMDLINE_LINUX="intel_iommu=on iommu=pt vfio-pci.ids={{ item.pcie_devices | join(",") }}"'
    backup: yes
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes | selectattr('pcie_devices', 'defined') | list }}"
  become: yes
  when: 
    - not harvester_test_mode
    - item.pcie_devices is defined and item.pcie_devices | length > 0
  notify: update grub

- name: Update GRUB configuration for nodes without PCIe passthrough
  lineinfile:
    path: /etc/default/grub
    regexp: '^GRUB_CMDLINE_LINUX='
    line: 'GRUB_CMDLINE_LINUX="intel_iommu=on iommu=pt"'
    backup: yes
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes | rejectattr('pcie_devices', 'defined') | list }}"
  become: yes
  when: not harvester_test_mode
  notify: update grub

- name: Apply GRUB changes
  command: update-grub
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes }}"
  become: yes
  when: not harvester_test_mode

- name: Set up sysctl parameters for Harvester
  copy:
    content: |
      # Harvester network optimizations
      net.ipv4.ip_forward = 1
      net.ipv6.conf.all.forwarding = 1
      net.bridge.bridge-nf-call-iptables = 1
      net.bridge.bridge-nf-call-ip6tables = 1
      
      # Increase system limits
      fs.inotify.max_user_instances = 8192
      fs.inotify.max_user_watches = 524288
      
      # Network tuning
      net.core.somaxconn = 32768
      net.ipv4.tcp_max_syn_backlog = 8192
      net.core.netdev_max_backlog = 16384
    dest: /etc/sysctl.d/99-harvester.conf
    mode: '0644'
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes }}"
  become: yes
  when: not harvester_test_mode

- name: Apply sysctl parameters
  command: sysctl -p /etc/sysctl.d/99-harvester.conf
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes }}"
  become: yes
  when: not harvester_test_mode

- name: Enable required kernel modules
  modprobe:
    name: "{{ module }}"
    state: present
  loop_control:
    loop_var: module
  loop:
    - vfio
    - vfio_iommu_type1
    - vfio_pci
    - vfio_virqfd
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes | selectattr('pcie_devices', 'defined') | list }}"
  become: yes
  when: 
    - not harvester_test_mode
    - item.pcie_devices is defined and item.pcie_devices | length > 0

- name: Ensure kernel modules load on boot
  copy:
    content: |
      vfio
      vfio_iommu_type1
      vfio_pci
      vfio_virqfd
    dest: /etc/modules-load.d/vfio.conf
    mode: '0644'
  delegate_to: "{{ item.ip }}"
  loop: "{{ harvester_nodes | selectattr('pcie_devices', 'defined') | list }}"
  become: yes
  when: 
    - not harvester_test_mode
    - item.pcie_devices is defined and item.pcie_devices | length > 0

- name: Verify node preparation
  debug:
    msg: |
      Node Preparation Summary:
      - GRUB configurations updated for IOMMU
      - Sysctl parameters applied
      - VFIO modules loaded for passthrough nodes
      - Nodes ready for Harvester installation
