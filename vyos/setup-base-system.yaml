- name: setup router system base
  hosts: router
  gather_facts: yes
  vars:
    infisicalClientSecret: "{{ lookup('ansible.builtin.env', 'INFISICAL_CLIENT_SECRET', default=undef()) }}"
    systemSudoPassword: "{{ lookup(
      'infisical.vault.read_secrets',
      universal_auth_client_id='72fdfa59-56b2-4d2e-9dde-cd5a4d5ef3ea',
      universal_auth_client_secret=infisicalClientSecret,
      project_id='e0ff40f2-e63c-4ffc-9233-a66c46a47b2e',
      path='/',
      env_slug='prod',
      url='https://app.infisical.com',
      secret_name='systemSudoPassword',
      )
    }}"
    ansible_become_password: "{{ systemSudoPassword.value }}"
  roles:
    - role: stafwag.qemu_img
      become: true
      become_user: root
      vars:
        qemu_img:
          dest: /var/lib/libvirt/images/vyos-1.5.qcow2
          size: 20G
          format: qcow2
          overwrite: true
    - role: ansible_systemd
      become: true
      become_user: root
      systemd_network_netdevs:
        lanBridge:
          NetDev:
            Kind: bridge
      systemd_network_networks:
        enp1:
          Network:
            DHCP: ipv4
  tasks:
    - name: get versions
      ansible.builtin.include_vars:
        file: ../versions/router.json
        name: versions
    - name: install deps with specific versions
      become: true
      become_user: root
      ansible.builtin.apt:
        pkg:
          - "libvirt-daemon-system={{ versions.libvirtDaemonSystem }}"
        state: present
    - name: install latest deps
      become: true
      become_user: root
      ansible.builtin.apt:
        pkg:
          - "qemu-kvm"
          - "libvirt-clients"
          - "bridge-utils"
          - "python3"
          - "python3-lxml"
          - "python3-libvirt"
          - "bridge-utils"
        update_cache: yes
        state: present
    - name: start libvirtd
      become: true
      become_user: root
      ansible.builtin.systemd_service:
        name: libvirtd
        enabled: true
        daemon_reload: true
    - name: add to libvirt group
      become: true
      become_user: root
      ansible.builtin.user:
        name: user
        append: true
        groups: libvirt
    - name: create images folder
      become: true
      become_user: root
      ansible.builtin.file:
        path: /var/lib/libvirt/images/
        state: directory
        mode: 0775
        group: libvirt
          #- name: create qcow image
          #  ansible.builtin.shell:
          #    cmd: >-
          #      qemu-img create
          #      -f qcow /var/lib/libvirt/images/vyos-1.5.qcow2
          #      40G
    - name: setup networking
      #      become: true
      #      become_user: root
      ansible.builtin.include_role:
        name: mrlesmithjr.netplan
        apply:
          netplan_config_file: /etc/netplan/config.yaml
            #netplan_enabled: true
          netplan_renderer: networkd
            # netplan_configuration:
            #   network:
            #     enp0s
    - name: define vyos vm
      community.libvirt.virt:
        command: define
        xml: "{{ lookup('template', './vyos_template.xml') }}"
        autostart: true
        name: vyos-1.5
    - name: create vyos image
      community.libvirt.virt:
        command: create
        name: vyos-1.5
    - name: ensure network is started
      ansible.builtin.shell:
        cmd: >-
          virsh net-start lan
        cmd: virsh net-start wan
    - name: ensure vyos is running
      community.libvirt.virt:
        name: vyos-1.5
        state: running



